
#-------------------------------------------#
#                ConfigMap                  #
#-------------------------------------------#
Pros: +--> Avoid hardcode env in Pod Descriptor (field 'value')
      +--> Using 'ValueFrom' field to get env from other pod

Usage: variable from ConfigMap will be expose through
                +--> env variable like $(ENV_VAR) for cmdline
                +--> ConfigMap volume: located at /etc/ConfigMap

# Create ConfigMap with 1 value-entry
kubectl create configmap myconfigmap \
--from-literal=foo=bar

# Create ConfigMap with multiple value-entries
kubectl create configmap myconfigmap \
--from-literal=foo=bar --from-literal=bar=baz --from-literal=one=two

# Create ConfigMap entry from content of a file
kubectl create configmap my-config --from-file=config-file.conf

# Create ConfigMap from all above (individual files + directory + literal value)
kubectl create configmap my-config \
--from-file=foo.json \
--from-file=bar=foobar.conf \
--from-file=config-opts \ 
--from-literal=some=thing 

#-------------------------------------------#
#                Secret                     #
#-------------------------------------------#
Pros: +--> Avoid expose sensitive information to outside world
      |    (leave no footage on disk as passwd is stored on tmpfs)
      +--> Can be shared between pods in the same node.

Usage: variable from ConfigMap will be expose through
                +--> env variable like $(ENV_VAR) for cmdline
                +--> Secret volume: located at /etc/secret-volume


# Create ConfigMap with 1 value-entry
kubectl create secret generic \
--from-literal=mysql_password=ROOT_PASSWORD

# Create ConfigMap with multiple value-entries
kubectl create secret generic \
--from-literal=foo=bar --from-file=my-private-keygen=/root/.ssh/id_rsa



#-------------------------------------------#
#    INFORMATION RETRIVAL INSIDE A POD      #
#-------------------------------------------#
+ Via environment variable (use: env + configMapKeyRef)
---------
    spec:
       containers:
       - name: kuard-tls
         image: gcr.io/kuar-demo/kuard-amd64:1
         env:
         - name: MY_SECRET
           valueFrom: 
              configMapKeyRef:
                 name: fortune-config
                 key: sleep-interval
    >>> connect to Pod + list by command "env"

+ Via Secret/ConfigMap volume (use: volumes + secret)
---------
    spec:
       containers:
       - name: kuard-tls
         image: gcr.io/kuar-demo/kuard-amd64:1
         .....
       volumes:
       - name: tls-certs
         secret:
            secretName: kuard-tls
    >>> connect to pod & cat /etc/secret-volume/kuard-tls
